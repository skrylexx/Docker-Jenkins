// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class Productprice309charTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void productprice309char() {
    // Test name: Product-price-309-char-
    // Step # | name | target | value | comment
    // 1 | open | https://skrylexx.github.io/Products_CRUDS/ |  | 
    driver.get("https://skrylexx.github.io/Products_CRUDS/");
    // 2 | setWindowSize | 974x1032 |  | 
    driver.manage().window().setSize(new Dimension(974, 1032));
    // 3 | click | id=inputName |  | 
    driver.findElement(By.id("inputName")).click();
    // 4 | click | id=inputCategory |  | 
    driver.findElement(By.id("inputCategory")).click();
    // 5 | click | id=inputCategory |  | 
    driver.findElement(By.id("inputCategory")).click();
    // 6 | doubleClick | id=inputCategory |  | 
    {
      WebElement element = driver.findElement(By.id("inputCategory"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    // 7 | click | id=btnAdd |  | 
    driver.findElement(By.id("btnAdd")).click();
    // 8 | type | id=inputName | Aaa | 
    driver.findElement(By.id("inputName")).sendKeys("Aaa");
    // 9 | assertElementPresent | id=alertPrice |  | 
    {
      List<WebElement> elements = driver.findElements(By.id("alertPrice"));
      assert(elements.size() > 0);
    }
  }
}
